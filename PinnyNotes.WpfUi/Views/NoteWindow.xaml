<Window x:Class="PinnyNotes.WpfUi.Views.NoteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PinnyNotes.WpfUi.ViewModels"
        xmlns:controls="clr-namespace:PinnyNotes.WpfUi.Controls"
        mc:Ignorable="d"

        AllowsTransparency="True"
        BorderThickness="1"
        Icon="/Images/icon.ico"
        MinHeight="75"
        MinWidth="150"
        ResizeMode="CanResizeWithGrip"
        WindowStyle="None"

        FocusManager.FocusedElement="{Binding ElementName=NoteTextBox}"

        Background="{Binding BackgroundColorBrush}"
        BorderBrush="{Binding BorderColorBrush}"
        Height="{Binding Height}"
        Left="{Binding X}"
        Opacity="{Binding Opacity}"
        ShowInTaskbar="{Binding NoteSettings.ShowInTaskBar}"
        Top="{Binding Y}"
        Width="{Binding Width}"

        Activated="Window_Activated"
        Closing="Window_Closing"
        Deactivated="Window_Deactivated"
        MouseDown="NoteWindow_MouseDown"
        MouseEnter="Window_MouseEnter"
        MouseLeave="Window_MouseLeave"
        Loaded="Window_Loaded"
        StateChanged="NoteWindow_StateChanged"

        d:DataContext="{d:DesignInstance Type=vm:NoteViewModel}"
        d:Height="300"
        d:Width="300"
        d:Background="#fffcdd"
        d:BorderBrush="#feea00">

    <Window.Resources>
        <!-- Title Bar Buttons -->
        <Style x:Key="TitleBarButtonStyle" TargetType="Control">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Opacity" Value="0.6"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1.0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Show/Hide Title Bar -->
        <Storyboard x:Key="HideTitleBarAnimation">
            <DoubleAnimation Storyboard.TargetName="TitleBarGrid"
                             Storyboard.TargetProperty="Height" 
                             To="0" Duration="0:0:0.2" />
        </Storyboard>
        <Storyboard x:Key="ShowTitleBarAnimation">
            <DoubleAnimation Storyboard.TargetName="TitleBarGrid"
                             Storyboard.TargetProperty="Height" 
                             To="40" Duration="0:0:0.2" />
        </Storyboard>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Title Bar -->
        <Grid Name="TitleBarGrid" Grid.Column="0" Grid.Row="0" Height="40" MouseDown="TitleBar_MouseDown" Background="{Binding TitleBarColorBrush}" d:Background="#fef7b1">

            <!-- New Note Button -->
            <Button Name="NewButton"
                    HorizontalAlignment="Left"
                    Margin="10,0,0,0"
                    ToolTip="New Note"
                    Style="{StaticResource TitleBarButtonStyle}"
                    Click="NewButton_Click">
                <Button.Template>
                    <ControlTemplate>
                        <Canvas>
                            <Rectangle Width="20" Height="20" Fill="Transparent" />
                            <Path Data="M 10,2 v 16 M 2,10 h 16"
                                  Stroke="{Binding TitleButtonColorBrush}"
                                  StrokeThickness="3"
                                  StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                  d:Stroke="#464646">
                            </Path>
                        </Canvas>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!-- Pin Button -->
            <ToggleButton Name="PinButton"
                          HorizontalAlignment="Center"
                          ToolTip="Toggle On Top"
                          Style="{StaticResource TitleBarButtonStyle}"
                          IsChecked="{Binding IsPinned}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Canvas>
                            <Rectangle Width="20" Height="20" Fill="Transparent" />
                            <Path Data="M 5,0 h 10 c 1,0 1,2 0,2 h -2 l 1,6 c 0,0 4,1 4,5 0,1 -7,1 -7,1 0,0 0,6 -1,6 C 9,20 9,14 9,14 9,14 2,14 2,13 2,9 6,8 6,8 L 7,2 H 5 C 4,2 4,0 5,0 Z"
                                  Fill="{Binding TitleButtonColorBrush}"
                                  RenderTransformOrigin="0.5,0.5"
                                  d:Fill="#464646">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="False">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="45"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Canvas>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>

            <!-- Close Button -->
            <Button Name="CloseButton"
                    HorizontalAlignment="Right"
                    Margin="0,0,10,0"
                    ToolTip="Close"
                    Style="{StaticResource TitleBarButtonStyle}"
                    Click="CloseButton_Click">
                <Button.Template>
                    <ControlTemplate>
                        <Canvas>
                            <Rectangle Width="20" Height="20" Fill="Transparent" />
                            <Path Data="M 3,3 L 17,17 M 3,17 L 17,3"
                                  Stroke="{Binding TitleButtonColorBrush}"
                                  StrokeThickness="3"
                                  StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                  d:Stroke="#464646">
                            </Path>
                        </Canvas>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!-- Context Menu -->
            <Grid.ContextMenu>
                <ContextMenu Name="TitleBarContextMenu">
                    <MenuItem Header="Save" Click="SaveMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Reset size" Click="ResetMenuItem_Click" />
                    <Separator />
                    <!-- Theme options are added dynamically in code behind -->
                    <Separator Name="ThemeMenuSeparator" />
                    <MenuItem Header="Settings" Click="SettingsMenuItem_Click" />
                </ContextMenu>
            </Grid.ContextMenu>

        </Grid>

        <!-- Text Box -->
        <Grid Grid.Column="0" Grid.Row="1">
            <controls:NoteTextBoxControl BorderThickness="0"
                                         Background="Transparent"
                                         Foreground="{Binding TextColorBrush}"
                                         CaretBrush="{Binding TextColorBrush}"
                                         FontSize="16"
                                         x:Name="NoteTextBox"
                                         Padding="5,5,5,5"
                                         TextChanged="NoteTextBox_TextChanged"
                                         Text="{Binding Content}"
                                         StandardFontFamily="{Binding EditorSettings.StandardFontFamily}"
                                         MonoFontFamily="{Binding EditorSettings.MonoFontFamily}"
                                         UseMonoFont="{Binding EditorSettings.UseMonoFont}"
                                         AutoCopy="{Binding EditorSettings.CopyOnSelect}"
                                         AutoIndent="{Binding EditorSettings.AutoIndent}"
                                         ConvertIndentation="{Binding EditorSettings.ConvertIndentationOnPaste}"
                                         CopyFallbackAction="{Binding EditorSettings.CopyFallbackAction}"
                                         KeepNewLineAtEndVisible="{Binding EditorSettings.KeepNewLineVisible}"
                                         MiddleClickPaste="{Binding EditorSettings.MiddleClickPaste}"
                                         NewLineAtEnd="{Binding EditorSettings.NewLineAtEnd}"
                                         SpellCheck.IsEnabled="{Binding EditorSettings.CheckSpelling}"
                                         TabSpaces="{Binding EditorSettings.UseSpacesForTab}"
                                         TabWidth="{Binding EditorSettings.TabSpacesWidth}"
                                         WrapText="{Binding EditorSettings.WrapText}"
                                         TrimCopiedText="{Binding EditorSettings.TrimCopiedText}"
                                         TrimPastedText="{Binding EditorSettings.TrimCopiedText}"
                />
        </Grid>
    </Grid>
</Window>
